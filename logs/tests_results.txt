test_get_nb_char (__main__.TestExercice) ... ok
test_get_nb_words (__main__.TestExercice) ... ERROR
test_pair (__main__.TestExercice) ... FAIL
test_remove_third_char (__main__.TestExercice) ... FAIL
test_replace_char (__main__.TestExercice) ... ok

======================================================================
ERROR: test_get_nb_words (__main__.TestExercice)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test_exercice.py", line 75, in test_get_nb_words
    output = [exercice.get_nb_words(v[0], v[1]) for v in values]
  File "test_exercice.py", line 75, in <listcomp>
    output = [exercice.get_nb_words(v[0], v[1]) for v in values]
TypeError: get_nb_words() takes 1 positional argument but 2 were given

======================================================================
FAIL: test_pair (__main__.TestExercice)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test_exercice.py", line 21, in test_pair
    'Mauvaise identification de la parité de la longueur de la chaine'
AssertionError: Lists differ: [True, None, None] != [True, False, False]

First differing element 1:
None
False

- [True, None, None]
+ [True, False, False] : Mauvaise identification de la parité de la longueur de la chaine

======================================================================
FAIL: test_remove_third_char (__main__.TestExercice)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test_exercice.py", line 33, in test_remove_third_char
    'Retrait du mauvais caractère'
AssertionError: Lists differ: ['hy jad!', 'acdefg', '0234'] != ['he jad!', 'abdefg', '0134']

First differing element 0:
'hy jad!'
'he jad!'

- ['hy jad!', 'acdefg', '0234']
?    ^          ^         ^

+ ['he jad!', 'abdefg', '0134']
?    ^          ^         ^
 : Retrait du mauvais caractère

----------------------------------------------------------------------
Ran 5 tests in 0.001s

FAILED (failures=2, errors=1)
